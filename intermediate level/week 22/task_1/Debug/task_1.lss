
task_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000018c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000390  00000000  00000000  000001e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000621  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 c4 00 	jmp	0x188	; 0x188 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define DDRB *((char*)0x37)
#define PORTB *((char*)0x38)
#define PINB *((char*)0x36)

int main(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0xff;
  74:	ea e3       	ldi	r30, 0x3A	; 58
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	8f ef       	ldi	r24, 0xFF	; 255
  7a:	80 83       	st	Z, r24
	PORTA = 0;
  7c:	eb e3       	ldi	r30, 0x3B	; 59
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	10 82       	st	Z, r1
	DDRB = 0;
  82:	e7 e3       	ldi	r30, 0x37	; 55
  84:	f0 e0       	ldi	r31, 0x00	; 0
  86:	10 82       	st	Z, r1
	PORTB = 0xff;
  88:	e8 e3       	ldi	r30, 0x38	; 56
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	80 83       	st	Z, r24

	while(1)
	{
		if(((PINB>>0)&1) == 0)
  90:	e6 e3       	ldi	r30, 0x36	; 54
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	88 2f       	mov	r24, r24
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	81 70       	andi	r24, 0x01	; 1
  9c:	90 70       	andi	r25, 0x00	; 0
  9e:	00 97       	sbiw	r24, 0x00	; 0
  a0:	41 f4       	brne	.+16     	; 0xb2 <main+0x46>
		{
			PORTA |= (1<<0);
  a2:	ab e3       	ldi	r26, 0x3B	; 59
  a4:	b0 e0       	ldi	r27, 0x00	; 0
  a6:	eb e3       	ldi	r30, 0x3B	; 59
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	81 60       	ori	r24, 0x01	; 1
  ae:	8c 93       	st	X, r24
  b0:	10 c0       	rjmp	.+32     	; 0xd2 <main+0x66>
		}else if(((PINB>>0)&1) == 1)
  b2:	e6 e3       	ldi	r30, 0x36	; 54
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	88 2f       	mov	r24, r24
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	81 70       	andi	r24, 0x01	; 1
  be:	90 70       	andi	r25, 0x00	; 0
  c0:	88 23       	and	r24, r24
  c2:	39 f0       	breq	.+14     	; 0xd2 <main+0x66>
		{
			PORTA &= ~(1<<0);
  c4:	ab e3       	ldi	r26, 0x3B	; 59
  c6:	b0 e0       	ldi	r27, 0x00	; 0
  c8:	eb e3       	ldi	r30, 0x3B	; 59
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	8e 7f       	andi	r24, 0xFE	; 254
  d0:	8c 93       	st	X, r24
		}if(((PINB>>1)&1) == 0)
  d2:	e6 e3       	ldi	r30, 0x36	; 54
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	86 95       	lsr	r24
  da:	88 2f       	mov	r24, r24
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	81 70       	andi	r24, 0x01	; 1
  e0:	90 70       	andi	r25, 0x00	; 0
  e2:	00 97       	sbiw	r24, 0x00	; 0
  e4:	41 f4       	brne	.+16     	; 0xf6 <main+0x8a>
		{
			PORTA |= (1<<1);
  e6:	ab e3       	ldi	r26, 0x3B	; 59
  e8:	b0 e0       	ldi	r27, 0x00	; 0
  ea:	eb e3       	ldi	r30, 0x3B	; 59
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	8c 93       	st	X, r24
  f4:	11 c0       	rjmp	.+34     	; 0x118 <main+0xac>
		}else if(((PINB>>1)&1) == 1)
  f6:	e6 e3       	ldi	r30, 0x36	; 54
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	86 95       	lsr	r24
  fe:	88 2f       	mov	r24, r24
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	81 70       	andi	r24, 0x01	; 1
 104:	90 70       	andi	r25, 0x00	; 0
 106:	88 23       	and	r24, r24
 108:	39 f0       	breq	.+14     	; 0x118 <main+0xac>
		{
			PORTA &= ~(1<<1);
 10a:	ab e3       	ldi	r26, 0x3B	; 59
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	eb e3       	ldi	r30, 0x3B	; 59
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	8d 7f       	andi	r24, 0xFD	; 253
 116:	8c 93       	st	X, r24
		}
		if(((PINB>>2)&1) == 0)
 118:	e6 e3       	ldi	r30, 0x36	; 54
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	86 95       	lsr	r24
 120:	86 95       	lsr	r24
 122:	88 2f       	mov	r24, r24
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	81 70       	andi	r24, 0x01	; 1
 128:	90 70       	andi	r25, 0x00	; 0
 12a:	00 97       	sbiw	r24, 0x00	; 0
 12c:	79 f4       	brne	.+30     	; 0x14c <main+0xe0>
		{
			PORTA |= (1<<0);
 12e:	ab e3       	ldi	r26, 0x3B	; 59
 130:	b0 e0       	ldi	r27, 0x00	; 0
 132:	eb e3       	ldi	r30, 0x3B	; 59
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	81 60       	ori	r24, 0x01	; 1
 13a:	8c 93       	st	X, r24
			PORTA |= (1<<1);
 13c:	ab e3       	ldi	r26, 0x3B	; 59
 13e:	b0 e0       	ldi	r27, 0x00	; 0
 140:	eb e3       	ldi	r30, 0x3B	; 59
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 81       	ld	r24, Z
 146:	82 60       	ori	r24, 0x02	; 2
 148:	8c 93       	st	X, r24
 14a:	a2 cf       	rjmp	.-188    	; 0x90 <main+0x24>
		}else if(((PINB>>2)&1) == 1)
 14c:	e6 e3       	ldi	r30, 0x36	; 54
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	86 95       	lsr	r24
 154:	86 95       	lsr	r24
 156:	88 2f       	mov	r24, r24
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	81 70       	andi	r24, 0x01	; 1
 15c:	90 70       	andi	r25, 0x00	; 0
 15e:	88 23       	and	r24, r24
 160:	79 f0       	breq	.+30     	; 0x180 <main+0x114>
		{
			PORTA &= ~(1<<0);
 162:	ab e3       	ldi	r26, 0x3B	; 59
 164:	b0 e0       	ldi	r27, 0x00	; 0
 166:	eb e3       	ldi	r30, 0x3B	; 59
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	8e 7f       	andi	r24, 0xFE	; 254
 16e:	8c 93       	st	X, r24
			PORTA &= ~(1<<1);
 170:	ab e3       	ldi	r26, 0x3B	; 59
 172:	b0 e0       	ldi	r27, 0x00	; 0
 174:	eb e3       	ldi	r30, 0x3B	; 59
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	8d 7f       	andi	r24, 0xFD	; 253
 17c:	8c 93       	st	X, r24
 17e:	88 cf       	rjmp	.-240    	; 0x90 <main+0x24>
		}
		else
		{
			PORTA = 0;
 180:	eb e3       	ldi	r30, 0x3B	; 59
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	10 82       	st	Z, r1
 186:	84 cf       	rjmp	.-248    	; 0x90 <main+0x24>

00000188 <_exit>:
 188:	f8 94       	cli

0000018a <__stop_program>:
 18a:	ff cf       	rjmp	.-2      	; 0x18a <__stop_program>
